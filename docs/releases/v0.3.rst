SORA v0.3 (unreleased)
======================

New Features
------------

sora.body
^^^^^^^^^

- Added `get_position()` in Body as a shortcut to `ephem.get_position()`. [:issue:`76`]

- Created new `frame` submodule: [:issue:`74`]

  - Define a new class for the orientation of the body (`PlanetocentricFrame`),
    giving its rotation velocity, pole coordinates, and precession parameters as defined by
    Archinal et al. (2018). With it, we can transform to other reference frames using Astropy.

  - The definitions of the orientation parameters in Archinal et al. (2018) are hardcoded.
    The user can overwrite it by providing its own frame.

  - With the `PlanetocentricFrame`, we process and rotate the body to find its orientation
    at any epoch (must consider light time).

- Created new `shape` submodule to: [:issue:`74`]

  - Define the new `Shape3D` class where we can provide to the body a wavefront file
    with its 3D shape. An image corresponding to the texture can also be provided.

  - Define the new `Ellipsoid` class where the 3-dimensional sizes of the ellipsoid
    are provided to create a 3D object.

  - Plot the 3D shape on the tangent plane considering the sub-observer coordinates,
    its pole orientation, and the solar illumination.

  - Compute the limb of the rotated 3D shape to use it in the fitting process.
    This limb now requires a dependency on shapely.

sora.config
^^^^^^^^^^^

sora.ephem
^^^^^^^^^^

sora.extra
^^^^^^^^^^

sora.lightcurve
^^^^^^^^^^^^^^^

- Added argument "method" in `LightCurve.occ_lcfit()` method to allow the use
  of different fitting procedures. [:issue:`75`]

- Added argument "threads" in `LightCurve.occ_lcfit()` method to allow shared
  memory parallel processing. [:issue:`75`]

- Added argument "verbose" in `LightCurve.occ_lcfit()` method to enable
  progress bar during fitting procedure. [:issue:`75`]

sora.observer
^^^^^^^^^^^^^

sora.occultation
^^^^^^^^^^^^^^^^

- Added argument "method" in `Occultation.fit_ellipse()` method to allow the use
  of different fitting procedures. [:issue:`75`]

- Added argument "threads" in `Occultation.fit_ellipse()` method to allow shared
  memory parallel processing. [:issue:`75`]

- Added argument "verbose" in `Occultation.fit_ellipse()` method to enable
  progress bar during fitting procedure. [:issue:`75`]

- New method `fit_shape()` is created to fit the occultation chords to the 3D shape. [:issue:`74`]

- An auxiliary fitting function `fit_to_limb()` was created to fit the chords to a
  limb provided by the user. [:issue:`74`]

sora.prediction
^^^^^^^^^^^^^^^

- Included the ``VizierCatalogue`` in the prediction function. [:issue:`71`]

- Defined Gaia-DR3 as the default in the `prediction()` function. [:issue:`76`]

sora.star
^^^^^^^^^

- Added a new class called ``VizierCatalogue`` to allow the definition
  and usage of any catalogue available on Vizier. [:issue:`71`]

- Included the ``VizierCatalogue`` in the Star class. [:issue:`71`]

- Included the Gaia-DR3 catalogue, released on June 13, 2022, in the catalogue list. [:issue:`76`]

- Defined Gaia-DR3 as the default in the Star class. [:issue:`76`]

sora.stats
^^^^^^^^^^

- New module dedicated to design model fitting procedures using different techniques. [:issue:`75`]

API Changes
-----------

sora.body
^^^^^^^^^

sora.config
^^^^^^^^^^^

sora.ephem
^^^^^^^^^^

- `id_type` for planets and satellites are passed as `None` instead of `major_body`,
  following changes made in Horizons. [:issue:`76`]

sora.extra
^^^^^^^^^^

sora.lightcurve
^^^^^^^^^^^^^^^

sora.observer
^^^^^^^^^^^^^

sora.occultation
^^^^^^^^^^^^^^^^

sora.prediction
^^^^^^^^^^^^^^^

sora.star
^^^^^^^^^

Bug Fixes
---------

sora.body
^^^^^^^^^

sora.config
^^^^^^^^^^^

sora.ephem
^^^^^^^^^^

- Fixed bug that did not calculated ephemeris for observer when using Horizons
  if the observer did not have IAU code. [:issue:`80`]

sora.extra
^^^^^^^^^^

sora.lightcurve
^^^^^^^^^^^^^^^

sora.observer
^^^^^^^^^^^^^

sora.occultation
^^^^^^^^^^^^^^^^

sora.prediction
^^^^^^^^^^^^^^^

sora.star
^^^^^^^^^
